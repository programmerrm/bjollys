import{b as u,s as i}from"./apiSlice-B07QsG9S.js";const c=u.injectEndpoints({endpoints:s=>({addForgotPassword:s.mutation({query:t=>({url:"/accounts/user/forgot-password/",method:"POST",body:t})}),addConfirmPassword:s.mutation({query:({data:t,uidb64:a,token:e})=>({url:`/accounts/user/reset-password/${a}/${e}/`,method:"POST",body:t})}),addRegister:s.mutation({query:t=>({url:"/accounts/user/register/",method:"POST",body:t})}),addLogin:s.mutation({query:t=>({url:"/accounts/user/login/",method:"POST",body:t}),async onQueryStarted(t,{queryFulfilled:a,dispatch:e}){var n,d;try{const{data:o}=await a,r={user:o.data.user,tokens:{access_token:o.data.tokens.access_token,refresh_token:o.data.tokens.refresh_token}};e(i(r))}catch(o){const r=((d=(n=o==null?void 0:o.error)==null?void 0:n.data)==null?void 0:d.message)||"Login failed!";console.error("Login time error:",r)}}})})}),{useAddRegisterMutation:m,useAddLoginMutation:y,useAddForgotPasswordMutation:h,useAddConfirmPasswordMutation:p}=c;export{h as a,m as b,y as c,p as u};
